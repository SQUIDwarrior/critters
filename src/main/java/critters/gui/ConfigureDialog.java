/*
 * Copyright (c) 2013 Mike Deats
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 * 
 * Created on May 4, 2013
 */

package critters.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

import critters.Critter;
import critters.CritterModel;

/**
 * 
 * @author mike
 */
public class ConfigureDialog extends javax.swing.JDialog {

	private int total;
	private HashSet<CritterConfigurationPanel> config;

	/** Creates new form ConfigureDialog */
	public ConfigureDialog(java.awt.Frame parent, CritterModel theModel) {
		super(parent, true);
		initComponents();

		config = new HashSet<CritterConfigurationPanel>();
		for (Class<? extends Critter> critterType : theModel.getPopulationCounters()
				.keySet()) {
			int pop = theModel.getPopulationCounters().get(critterType).intValue();
			addCritter(critterType, pop);
		}

		typeSelector.removeAllItems();
		for (Class<? extends Critter> type : CritterModel
				.getAvailableCritterTypes()) {
			typeSelector.addItem(type);
		}
		typeSelector.setSelectedIndex(0);

		addButton.addActionListener(new ActionListener() {

			@SuppressWarnings("unchecked")
			public void actionPerformed(ActionEvent e) {
				addCritter((Class<? extends Critter>) typeSelector.getSelectedItem(),
						Integer.parseInt(populationField.getText()));
			}
		});
	}

	public void addCritter(Class<? extends Critter> critterType, int population) {
		// TODO max population might need to be variable
		CritterConfigurationPanel panel = new CritterConfigurationPanel(
				CritterModel.getAvailableCritterTypes());
		panel.setType(critterType, population, CritterModel.MAX_POPULATION);

		config.add(panel);

		jPanel1.add(panel);
		pack();
		updateTotals();
	}

	public Map<Class<? extends Critter>, Integer> getConfiguration() {
		HashMap<Class<? extends Critter>, Integer> conf = new HashMap<Class<? extends Critter>, Integer>(
				0);
		for (CritterConfigurationPanel cp : config) {
			conf.put(cp.getCritterType(), cp.getPopulation());
		}

		return conf;
	}

	private void updateTotals() {
		total = 0;
		for (CritterConfigurationPanel cp : config) {
			total += cp.getPopulation();
		}

		totalLabel.setText("Total " + total);
		// availableLabel.setText("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		addButton = new javax.swing.JButton();
		availableLabel = new javax.swing.JLabel();
		totalLabel = new javax.swing.JLabel();
		populationField = new javax.swing.JTextField();
		typeSelector = new javax.swing.JComboBox();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jPanel1.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Current Critters"));
		jPanel1.setLayout(new java.awt.GridLayout(4, 3, 6, 1));

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

		addButton.setText("Add");

		availableLabel.setText("Available");

		totalLabel.setText("Total");

		populationField.setText("Population");

		typeSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"Item 1", "Item 2", "Item 3", "Item 4" }));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						jPanel2Layout.createSequentialGroup().addComponent(addButton)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(populationField,
										javax.swing.GroupLayout.PREFERRED_SIZE, 126,
										javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(typeSelector,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(availableLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE, 116,
										javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(totalLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE, 110,
										javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(
										151, Short.MAX_VALUE)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout.createParallelGroup(
						javax.swing.GroupLayout.Alignment.BASELINE).addComponent(addButton)
						.addComponent(populationField,
								javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(
								typeSelector, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(
								availableLabel).addComponent(totalLabel)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2,
				javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addComponent(jPanel2,
						javax.swing.GroupLayout.PREFERRED_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 377,
								Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *          the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				ConfigureDialog dialog = new ConfigureDialog(new javax.swing.JFrame(),
						null);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton addButton;
	private javax.swing.JLabel availableLabel;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JTextField populationField;
	private javax.swing.JLabel totalLabel;
	private javax.swing.JComboBox typeSelector;
	// End of variables declaration//GEN-END:variables

}
