/*
 * Copyright (c) 2013 Mike Deats
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 * 
 * Created on May 4, 2013
 */

package critters.gui;

import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Point;

import critters.Critter;
import critters.CritterModel;

/**
 *
 * @author  mike
 */
public class CritterCanvas extends javax.swing.JPanel {
    private CritterModel theModel;
    private FontMetrics fm;
    
    /** Creates new form CritterCanvas */
    public CritterCanvas(CritterModel theModel) {
    	this.theModel = theModel;
        initComponents();
    }
    
    public void setFontmetrics(FontMetrics fm)
    {
        this.fm = fm;
    }
    
    @Override
        public void paintComponent(Graphics g)
        {

            for(int i = 0; i < theModel.getRows(); i++)
                for(int j = 0; j < theModel.getCols(); j++)
                {
                        Critter critter = theModel.getCritterAt(new Point(j, i));
                        
                        if(critter != null)
                                g.drawString(critter.getSymbol()+ "", j * fm.getFont().getSize(), i  * fm.getFont().getSize() );
                }
        }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
